{
    "code": "// verification-helper: UNITTEST\n#include \"utility/zipper.hpp\"\n\nvoid ConstructorTest()\n{\n    Zipper<int> zipper({2, 4, 2, 6, 6, 2});  // {2,4,6}\n    assert(zipper.unzip(0) == 2);\n    assert(zipper.unzip(1) == 4);\n    assert(zipper.unzip(2) == 6);\n    assert(zipper.zip(2) == 0);\n    assert(zipper.zip(4) == 1);\n    assert(zipper.zip(6) == 2);\n    assert(zipper.size() == 3);\n}\n\nvoid AddTest1()\n{\n    Zipper<int> zipper({2, 4, 2, 6, 6, 2});  // {2,4,6}\n    zipper.add(3);                           // {2,3,4,6}\n    assert(zipper.unzip(0) == 2);\n    assert(zipper.unzip(1) == 3);\n    assert(zipper.unzip(2) == 4);\n    assert(zipper.unzip(3) == 6);\n    assert(zipper.zip(2) == 0);\n    assert(zipper.zip(3) == 1);\n    assert(zipper.zip(4) == 2);\n    assert(zipper.zip(6) == 3);\n    assert(zipper.size() == 4);\n}\n\nvoid AddTest2()\n{\n    Zipper<int> zipper;\n    zipper.add({2, 4, 2, 6, 6, 2});  // {2,4,6}\n    assert(zipper.unzip(0) == 2);\n    assert(zipper.unzip(1) == 4);\n    assert(zipper.unzip(2) == 6);\n    assert(zipper.zip(2) == 0);\n    assert(zipper.zip(4) == 1);\n    assert(zipper.zip(6) == 2);\n    assert(zipper.size() == 3);\n}\n\nint main()\n{\n    ConstructorTest();\n    AddTest1();\n    AddTest2();\n    return 0;\n}\n",
    "result": "AC"
}