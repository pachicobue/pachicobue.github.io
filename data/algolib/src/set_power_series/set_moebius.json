{
    "code": "#pragma once\n#include \"../common.hpp\"\ntemplate<typename T>\nVec<T> setMoebius(const Vec<T>& xs, bool subset)\n{\n    const int N = bitCeil(xs.size());\n    Vec<T> ys(N);\n    for (int i : rep(xs.size())) { ys[i] = xs[i]; }\n    for (int i = 1; i < N; i <<= 1) {\n        for (int j : rep(N)) {\n            if ((j & i) == 0) {\n                if (subset) {\n                    ys[j | i] -= ys[j];\n                } else {\n                    ys[j] -= ys[j | i];\n                }\n            }\n        }\n    }\n    return ys;\n}\n",
    "result": "NOT_TESTED",
    "verified_with": [
        "verifications/set_power_series/and_convolution.test.cpp",
        "verifications/set_power_series/or_convolution.test.cpp"
    ]
}