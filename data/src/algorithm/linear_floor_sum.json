{
    "code": "#pragma once\n#include \"../common.hpp\"\n\ntemplate<typename T = i64>\nT linearFloorSum(i64 N, i64 A, i64 B, i64 C)\n{\n    // hogehoge\n    assert(C != 0);\n    if (C < 0) { return linearFloorSum<T>(N, -A, -B, -C); }\n    if (A == 0) { return T{N} * floorDiv(B, C); }\n    if (0 <= A and A < C and 0 <= B and B < C) {\n        const i64 M = ((i128)A * (N - 1) + B) / C;\n        return T{N - 1} * M - linearFloorSum<T>(M, C, C - B - 1, A);\n    } else {\n        const i64 a = floorDiv(A, C);\n        const i64 b = floorDiv(B, C);\n        return T{N} * (N - 1) / 2 * a + T{N} * b + linearFloorSum<T>(N, A - a * C, B - b * C, C);\n    }\n}\n",
    "result": "NOT_TESTED",
    "verified_with": [
        "verifications/algorithm/linear_floor_sum.test.cpp"
    ]
}