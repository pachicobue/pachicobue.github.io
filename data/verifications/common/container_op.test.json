{
    "code": "// verification-helper: UNITTEST\n#include \"common/container_op.hpp\"\n\nvoid minIndTest()\n{\n    std::vector<int> vs{2, 1, 1, 3, 3, 2};\n    assert(minInd(vs) == 1);\n}\n\nvoid maxIndTest()\n{\n    std::vector<int> vs{2, 1, 1, 3, 3, 2};\n    assert(maxInd(vs) == 3);\n}\n\nvoid lbIndTest()\n{\n    std::vector<int> vs{1, 1, 3, 3, 3, 5, 5};\n    assert(lbInd(vs, 0) == 0);\n    assert(lbInd(vs, 1) == 0);\n    assert(lbInd(vs, 5) == 5);\n    assert(lbInd(vs, 6) == 7);\n}\n\nvoid ubIndTest()\n{\n    std::vector<int> vs{1, 1, 3, 3, 3, 5, 5};\n    assert(ubInd(vs, 0) == 0);\n    assert(ubInd(vs, 1) == 2);\n    assert(ubInd(vs, 5) == 7);\n    assert(ubInd(vs, 6) == 7);\n}\n\nvoid genVecTest()\n{\n    int x = 1;\n    auto gen = [&]() {\n        const int y = x;\n        x *= 2;\n        return y;\n    };\n    auto vs = genVec<int>(5, gen);\n    assert(vs == std::vector<int>({1, 2, 4, 8, 16}));\n}\n\nvoid iotaVecTest()\n{\n    auto vs = iotaVec(5, 2);\n    assert(vs == std::vector<int>({2, 3, 4, 5, 6}));\n}\n\nint main()\n{\n    minIndTest();\n    maxIndTest();\n    lbIndTest();\n    ubIndTest();\n    genVecTest();\n    iotaVecTest();\n    return 0;\n}\n",
    "result": "AC"
}