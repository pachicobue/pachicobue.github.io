{
    "code": "// verification-helper: PROBLEM https://judge.yosupo.jp/problem/point_set_range_composite\n#include \"data_structure/segment_tree/segtree.hpp\"\n#include \"utility/modint.hpp\"\n#include \"utility/printer.hpp\"\n#include \"utility/scanner.hpp\"\nint main()\n{\n    using mint = modint_998244353;\n    using Func = Pair<mint, mint>;\n    struct Monoid\n    {\n        using T = Func;\n        static const T e() { return T{1, 0}; }\n        T operator()(const T& f2, const T& f1) const\n        {\n            return T{f1.first * f2.first, f1.first * f2.second + f1.second};\n        }\n    };\n\n    const auto [N, Q] = in.tup<int, int>();\n    Vec<Func> fs(N);\n    for (int i : rep(N)) { std::tie(fs[i].first, fs[i].second) = in.tup<mint, mint>(); }\n    auto seg = SegTree<Monoid>(fs);\n    LOOP (Q) {\n        const auto t = in.val<int>();\n        if (t == 0) {\n            const auto [p, c, d] = in.tup<int, mint, mint>();\n            seg.set(p, Func{c, d});\n        } else {\n            const auto [l, r, x] = in.tup<int, int, mint>();\n            const auto [a, b] = seg.fold(l, r);\n            out.ln((a * x + b).val());\n        }\n    }\n    return 0;\n}\n",
    "result": "AC"
}